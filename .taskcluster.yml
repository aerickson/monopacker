version: 1
policy:
  pullRequests: public
tasks:
  - $if: '(tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: { $eval: as_slugid("test") }
      created: { $fromNow: "" }
      deadline: { $fromNow: "2 hours" }
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: taskcluster/monopacker:build
        command:
          - /bin/bash
          - --login
          - -cx
          - |
            CHECKOUT_DIR="/monopacker_checkout"
            git clone "${event.pull_request.head.repo.clone_url}" "$CHECKOUT_DIR"
            cd "$CHECKOUT_DIR"
            git checkout "${event.pull_request.head.sha}"
            curl -sSL https://install.python-poetry.org | python3 -
            poetry install
            poetry run pytest
            poetry update
            if ! output=$(git status --porcelain) || [ -n "$output" ]; then
                echo "*** ./pipupdate.sh produced changes to the repository; these changes should be checked in ***";
                git --no-pager diff;
                exit 1;
            fi
      metadata:
        name: monopacker tests
        description: runs tests, validates default packer builders
        owner: taskcluster-internal@mozilla.com
        source: ${event.pull_request.head.repo.url}
  - $if: 'tasks_for == "github-push"'
    then:
      taskId: { $eval: as_slugid("test") }
      created: { $fromNow: "" }
      deadline: { $fromNow: "2 hours" }
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: taskcluster/monopacker:build
        command:
          - /bin/bash
          - --login
          - -cx
          - |
            CHECKOUT_DIR="/monopacker_checkout"
            git clone "${event.repository.url}" "$CHECKOUT_DIR"
            cd "$CHECKOUT_DIR"
            git checkout "${event.after}"
            curl -sSL https://install.python-poetry.org | python3 -
            poetry install
            poetry run pytest
      metadata:
        name: monopacker tests
        description: runs tests, validates default packer builders
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}
